{
  "name": "Error Channel and Retry Handler",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "error-handler",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "error-webhook-1",
      "name": "Error Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "severity_check",
              "leftValue": "={{ $json.severity }}",
              "rightValue": "critical",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "severity-check-1",
      "name": "Check Error Severity",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $vars.ADMIN_CHAT_ID }}"
            },
            {
              "name": "text",
              "value": "🚨 **CRITICAL ERROR**\\n\\n**Service:** {{ $json.service }}\\n**Error:** {{ $json.error }}\\n**Timestamp:** {{ $json.timestamp }}\\n**User:** {{ $json.userId }}\\n**Request ID:** {{ $json.requestId }}\\n\\n*Immediate attention required!*"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "alert-admin-1",
      "name": "Alert Admin",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        680,
        200
      ]
    },
    {
      "parameters": {
        "resource": "append",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "your_error_log_sheet_id",
          "mode": "list",
          "cachedResultName": "Error Log"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $json.timestamp }}",
            "Service": "={{ $json.service }}",
            "Severity": "={{ $json.severity }}",
            "Error": "={{ $json.error }}",
            "UserId": "={{ $json.userId }}",
            "RequestId": "={{ $json.requestId }}",
            "RetryCount": "={{ $json.retryCount || 0 }}",
            "Status": "Logged"
          },
          "matchingColumns": [],
          "schema": []
        },
        "options": {}
      },
      "id": "log-error-1",
      "name": "Log Error to Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        680,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "retry_check",
              "leftValue": "={{ ($json.retryCount || 0) < 3 }}",
              "rightValue": true,
              "operator": {
                "type": "boolean",
                "operation": "true"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "retry-check-1",
      "name": "Should Retry?",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "amount": "={{ Math.pow(2, $json.retryCount || 0) * 1000 }}",
        "unit": "ms"
      },
      "id": "retry-wait-1",
      "name": "Exponential Backoff Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1120,
        320
      ]
    },
    {
      "parameters": {
        "url": "{{ $json.originalUrl }}",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            },
            {
              "name": "X-Retry-Count",
              "value": "={{ ($json.retryCount || 0) + 1 }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "",
              "value": "={{ $json.originalPayload }}"
            }
          ]
        },
        "options": {
          "timeout": 30000
        }
      },
      "id": "retry-request-1",
      "name": "Retry Request",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        320
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $json.userId }}"
            },
            {
              "name": "text",
              "value": "⚠️ Sorry, I'm experiencing some technical difficulties. Please try again in a moment.\\n\\n*Reference ID: {{ $json.requestId }}*"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "user-error-msg-1",
      "name": "Send User Error Message",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1120,
        480
      ]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "id": "respond-webhook-1",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        1560,
        400
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Error Webhook": {
      "main": [
        [
          {
            "node": "Check Error Severity",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Error Severity": {
      "main": [
        [
          {
            "node": "Alert Admin",
            "type": "main",
            "index": 0
          },
          {
            "node": "Log Error to Sheet",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Log Error to Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log Error to Sheet": {
      "main": [
        [
          {
            "node": "Should Retry?",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Should Retry?": {
      "main": [
        [
          {
            "node": "Exponential Backoff Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send User Error Message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Exponential Backoff Wait": {
      "main": [
        [
          {
            "node": "Retry Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Retry Request": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send User Error Message": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Alert Admin": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "your_instance_id"
  },
  "id": "2",
  "tags": []
}