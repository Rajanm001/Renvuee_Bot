version: '3.8'

services:
  # Vector Database
  chroma:
    image: ghcr.io/chroma-core/chroma:latest
    ports:
      - "8000:8000"
    volumes:
      - ./data/chroma:/chroma/chroma
    environment:
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=${ANONYMIZED_TELEMETRY:-TRUE}
    networks:
      - copilot-network
    restart: unless-stopped

  # Agent A - Knowledge Agent
  agent-a:
    build:
      context: ./agents/agentA_knowledge
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CHROMA_PERSIST_DIR=/app/data/chroma
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./data/chroma:/app/data/chroma
      - ./data/temp:/app/temp
    depends_on:
      - chroma
    networks:
      - copilot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Agent B - Dealflow Agent  
  agent-b:
    build:
      context: ./agents/agentB_dealflow
      dockerfile: Dockerfile
    ports:
      - "8002:8002"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - copilot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Intent Classifier
  intent-classifier:
    build:
      context: ./agents/intent_classifier
      dockerfile: Dockerfile
    ports:
      - "8003:8003"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - copilot-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # n8n Orchestrator
  n8n:
    image: n8nio/n8n:latest
    ports:
      - "5678:5678"
    environment:
      - N8N_HOST=${N8N_HOST:-localhost}
      - N8N_PORT=5678
      - N8N_PROTOCOL=${N8N_PROTOCOL:-http}
      - NODE_ENV=production
      - WEBHOOK_URL=${WEBHOOK_URL:-http://localhost:5678}
      - GENERIC_TIMEZONE=${TIMEZONE:-UTC}
      - N8N_METRICS=true
      - N8N_LOG_LEVEL=${LOG_LEVEL:-info}
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB:-n8n}
      - DB_POSTGRESDB_USER=${POSTGRES_USER:-n8n}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      # Custom variables for workflows
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - ADMIN_CHAT_ID=${ADMIN_CHAT_ID}
      - DEFAULT_OWNER=${DEFAULT_OWNER:-System}
      - GOOGLE_SHEETS_OAUTH_CLIENT_ID=${GOOGLE_SHEETS_OAUTH_CLIENT_ID}
      - GOOGLE_SHEETS_OAUTH_CLIENT_SECRET=${GOOGLE_SHEETS_OAUTH_CLIENT_SECRET}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows
    depends_on:
      - postgres
      - agent-a
      - agent-b
      - intent-classifier
    networks:
      - copilot-network
    restart: unless-stopped

  # PostgreSQL for n8n
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-n8n}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB:-n8n}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - copilot-network
    restart: unless-stopped

  # Redis for caching and rate limiting
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - copilot-network
    restart: unless-stopped
    command: redis-server --appendonly yes

  # Nginx reverse proxy (for production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./infra/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./infra/ssl:/etc/nginx/ssl:ro
    depends_on:
      - n8n
      - agent-a
      - agent-b
      - intent-classifier
    networks:
      - copilot-network
    restart: unless-stopped

volumes:
  n8n_data:
  postgres_data:
  redis_data:

networks:
  copilot-network:
    driver: bridge