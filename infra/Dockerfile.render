# Multi-stage Dockerfile for Render deployment
FROM python:3.11-slim as base

# Install system dependencies
RUN apt-get update && apt-get install -y \
    curl \
    git \
    build-essential \
    && rm -rf /var/lib/apt/lists/*

# Install Node.js for n8n
RUN curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs

# Create app directory
WORKDIR /app

# Copy all source code
COPY . .

# Install Python dependencies for all agents
RUN pip install --no-cache-dir -r agents/agentA_knowledge/requirements.txt
RUN pip install --no-cache-dir -r agents/agentB_dealflow/requirements.txt  
RUN pip install --no-cache-dir -r agents/intent_classifier/requirements.txt

# Install n8n globally
RUN npm install -g n8n@latest

# Create data directories
RUN mkdir -p /app/data/chroma /app/data/temp

# Copy startup script
COPY infra/start.sh /app/start.sh
RUN chmod +x /app/start.sh

# Expose port for Render
EXPOSE 10000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:10000/health || exit 1

# Start all services
CMD ["/app/start.sh"]