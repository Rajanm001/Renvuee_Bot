{
  "name": "Telegram Revenue Copilot - Main Router",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "telegram-webhook",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "f1a1e5b5-8e9a-4a5a-9a5a-5a5a5a5a5a5a",
      "name": "Telegram Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "attachment_check",
              "leftValue": "={{ $json.message.document || $json.message.photo || $json.message.video || $json.message.audio }}",
              "rightValue": "",
              "operator": {
                "type": "exists",
                "operation": "exists",
                "rightType": "any"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "a2b2c3d3-4e4e-5f5f-6a6a-7b7b7b7b7b7b",
      "name": "Check for Attachments",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        460,
        300
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8001/ingest",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "driveFileId",
              "value": "={{ $json.file_id }}"
            },
            {
              "name": "requestId", 
              "value": "={{ $json.message.message_id + '_' + $now.toFormat('yyyyMMddHHmmss') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "c3d3e4f4-5g5g-6h6h-7i7i-8j8j8j8j8j8j",
      "name": "Route to Agent A - Ingest",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        680,
        200
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8003/classify",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "text",
              "value": "={{ $json.message.text || $json.message.caption || 'No text content' }}"
            },
            {
              "name": "hasAttachments",
              "value": false
            },
            {
              "name": "userId",
              "value": "={{ $json.message.from.id }}"
            },
            {
              "name": "requestId",
              "value": "={{ $json.message.message_id + '_' + $now.toFormat('yyyyMMddHHmmss') }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d4e4f5g5-6h6h-7i7i-8j8j-9k9k9k9k9k9k",
      "name": "Intent Classification",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        680,
        400
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "agent_routing",
              "leftValue": "={{ $json.suggestedAgent }}",
              "rightValue": "agentA",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "e5f5g6h6-7i7i-8j8j-9k9k-alalalalalal",
      "name": "Route by Agent",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        900,
        400
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8001/ask",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "userId",
              "value": "={{ $('Telegram Webhook').item.json.message.from.id }}"
            },
            {
              "name": "text",
              "value": "={{ $('Telegram Webhook').item.json.message.text }}"
            },
            {
              "name": "requestId",
              "value": "={{ $('Intent Classification').item.json.requestId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "f6g6h7i7-8j8j-9k9k-blbl-cmcmcmcmcmcm",
      "name": "Agent A - Ask",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "intent_check",
              "leftValue": "={{ $('Intent Classification').item.json.intent }}",
              "rightValue": "lead_capture",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "g7h7i8j8-9k9k-blbl-cmcm-dndndndndndn",
      "name": "Check Intent Type",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1120,
        500
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8002/newlead",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "raw",
              "value": "={{ $('Telegram Webhook').item.json.message.text }}"
            },
            {
              "name": "requestId",
              "value": "={{ $('Intent Classification').item.json.requestId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "h8i8j9k9-blbl-cmcm-dndn-eoeoeoeoeoeoe",
      "name": "Agent B - New Lead",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        420
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose"
          },
          "conditions": [
            {
              "id": "proposal_intent",
              "leftValue": "={{ $('Intent Classification').item.json.intent }}",
              "rightValue": "proposal_request",
              "operator": {
                "type": "string",
                "operation": "equals"
              }
            }
          ],
          "combinator": "or"
        },
        "options": {}
      },
      "id": "i9j9k0l0-cmcm-dndn-eoeo-fpfpfpfpfpfp",
      "name": "Check for Proposal",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1340,
        580
      ]
    },
    {
      "parameters": {
        "url": "http://localhost:8002/proposal-copy",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "httpBasicAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "lead",
              "value": "={{ {\"company\": \"Unknown\", \"intent\": \"proposal request\"} }}"
            },
            {
              "name": "requestId",
              "value": "={{ $('Intent Classification').item.json.requestId }}"
            }
          ]
        },
        "options": {}
      },
      "id": "j0k0l1m1-dndn-eoeo-fpfp-gqgqgqgqgqgq",
      "name": "Agent B - Proposal",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1560,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Telegram Webhook').item.json.message.chat.id }}"
            },
            {
              "name": "text",
              "value": "={{ $json.answer + '\\n\\n📚 *Sources:*\\n' + $json.citations.map(c => '• ' + c.title).join('\\n') }}",
              "options": {}
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "k1l1m2n2-eoeo-fpfp-gqgq-hrhrhrhrhrhr",
      "name": "Send Knowledge Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1340,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Telegram Webhook').item.json.message.chat.id }}"
            },
            {
              "name": "text",
              "value": "✅ **Lead Captured!**\\n\\n👤 **Contact:** {{ $json.name || 'Not provided' }}\\n🏢 **Company:** {{ $json.company || 'Not provided' }}\\n💡 **Intent:** {{ $json.intent || 'Not specified' }}\\n💰 **Budget:** {{ $json.budget || 'Not specified' }}\\n⭐ **Quality Score:** {{ ($json.qualityScore * 100).toFixed(0) }}%\\n\\n📋 *Lead saved to CRM*"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "l2m2n3o3-fpfp-gqgq-hrhr-isisisisisis",
      "name": "Send Lead Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1560,
        420
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Telegram Webhook').item.json.message.chat.id }}"
            },
            {
              "name": "text",
              "value": "📄 **Proposal Generated!**\\n\\n**{{ $json.title }}**\\n\\n{{ $json.summaryBlurb }}\\n\\n🔹 {{ $json.bulletPoints.join('\\n🔹 ') }}\\n\\n*Proposal saved to Drive*"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "m3n3o4p4-gqgq-hrhr-isis-jtjtjtjtjtjt",
      "name": "Send Proposal Response",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        1780,
        580
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://api.telegram.org/bot{{ $vars.TELEGRAM_BOT_TOKEN }}/sendMessage",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "chat_id",
              "value": "={{ $('Telegram Webhook').item.json.message.chat.id }}"
            },
            {
              "name": "text",
              "value": "✅ Got it! I've added **{{ $json.message.document?.file_name || $json.message.photo ? 'your image' : 'your file' }}** to the knowledge base.\\n\\n📚 *Ready to answer questions about this content!*"
            },
            {
              "name": "parse_mode",
              "value": "Markdown"
            }
          ]
        },
        "options": {}
      },
      "id": "n4o4p5q5-hrhr-isis-jtjt-kukukukukukuk",
      "name": "Send Ingest Confirmation",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [
        900,
        200
      ]
    },
    {
      "parameters": {
        "resource": "append",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "your_conversations_sheet_id",
          "mode": "list",
          "cachedResultName": "Conversations Log"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now.toISO() }}",
            "User": "={{ $('Telegram Webhook').item.json.message.from.username || $('Telegram Webhook').item.json.message.from.first_name }}",
            "Intent": "={{ $('Intent Classification').item.json.intent }}",
            "Input": "={{ $('Telegram Webhook').item.json.message.text }}",
            "Output": "={{ $json.answer || $json.title || 'File uploaded' }}",
            "Confidence": "={{ $('Intent Classification').item.json.confidence }}",
            "Citations": "={{ $json.citations ? $json.citations.map(c => c.title).join(', ') : '' }}",
            "RequestId": "={{ $('Intent Classification').item.json.requestId }}"
          },
          "matchingColumns": [],
          "schema": []
        },
        "options": {}
      },
      "id": "o5p5q6r6-isis-jtjt-kukuk-lvlvlvlvlvlv",
      "name": "Log to Conversations Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "resource": "append",
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "your_crm_sheet_id",
          "mode": "list",
          "cachedResultName": "CRM"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{ $now.toISO() }}",
            "LeadId": "={{ $json.requestId }}",
            "Name": "={{ $json.name }}",
            "Company": "={{ $json.company }}",
            "Email": "={{ $json.email }}",
            "Intent": "={{ $json.intent }}",
            "Budget": "={{ $json.budget }}",
            "Stage": "New",
            "Owner": "{{ $vars.DEFAULT_OWNER }}",
            "QualityScore": "={{ $json.qualityScore }}",
            "Notes": "={{ $json.notes }}"
          },
          "matchingColumns": [],
          "schema": []
        },
        "options": {}
      },
      "id": "p6q6r7s7-jtjt-kukuk-lvlv-mwmwmwmwmwmw",
      "name": "Log to CRM Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1780,
        420
      ]
    },
    {
      "parameters": {
        "respondWith": "allIncomingItems",
        "options": {}
      },
      "id": "q7r7s8t8-kukuk-lvlv-mwmw-nxnxnxnxnxnx",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        2000,
        400
      ]
    }
  ],
  "pinData": {},
  "connections": {
    "Telegram Webhook": {
      "main": [
        [
          {
            "node": "Check for Attachments",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Attachments": {
      "main": [
        [
          {
            "node": "Route to Agent A - Ingest",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Intent Classification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route to Agent A - Ingest": {
      "main": [
        [
          {
            "node": "Send Ingest Confirmation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Intent Classification": {
      "main": [
        [
          {
            "node": "Route by Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Route by Agent": {
      "main": [
        [
          {
            "node": "Agent A - Ask",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check Intent Type",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent A - Ask": {
      "main": [
        [
          {
            "node": "Send Knowledge Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Intent Type": {
      "main": [
        [
          {
            "node": "Agent B - New Lead",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Check for Proposal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent B - New Lead": {
      "main": [
        [
          {
            "node": "Send Lead Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check for Proposal": {
      "main": [
        [
          {
            "node": "Agent B - Proposal",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Agent B - Proposal": {
      "main": [
        [
          {
            "node": "Send Proposal Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Knowledge Response": {
      "main": [
        [
          {
            "node": "Log to Conversations Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Lead Response": {
      "main": [
        [
          {
            "node": "Log to CRM Sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Proposal Response": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Ingest Confirmation": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to Conversations Sheet": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Log to CRM Sheet": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "1",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "your_instance_id"
  },
  "id": "1",
  "tags": []
}